{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$ref": "#/definitions/MigrationInstance",
  "definitions": {
    "MigrationInstance": {
      "type": "object",
      "properties": {
        "$schema": {
          "type": "string"
        },
        "migrations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Migration"
          }
        }
      },
      "required": [
        "migrations"
      ]
    },
    "Migration": {
      "anyOf": [
        {
          "$ref": "#/definitions/CreateCollection"
        },
        {
          "$ref": "#/definitions/CreateField"
        }
      ]
    },
    "CreateCollection": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "createCollection"
        },
        "collectionName": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "collectionName"
      ]
    },
    "CreateField": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "createField"
        },
        "collectionName": {
          "type": "string"
        },
        "fieldName": {
          "type": "string"
        },
        "field": {
          "$ref": "#/definitions/SchemaField"
        }
      },
      "required": [
        "type",
        "collectionName",
        "fieldName",
        "field"
      ]
    },
    "SchemaField": {
      "anyOf": [
        {
          "$ref": "#/definitions/SchemaCountField"
        },
        {
          "$ref": "#/definitions/SchemaIntegerField"
        },
        {
          "$ref": "#/definitions/SchemaReferenceField"
        },
        {
          "$ref": "#/definitions/SchemaServerTimestampField"
        },
        {
          "$ref": "#/definitions/SchemaStringField"
        },
        {
          "$ref": "#/definitions/SchemaSumField"
        }
      ],
      "description": "Kira fields.\n\nProperty `type` of a field is required, and must be a camelCase of it's name."
    },
    "SchemaCountField": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "count"
        },
        "referenceCollectionName": {
          "type": "string",
          "description": "Name of collection of counted document, the collection must have reference to collection of this document."
        },
        "referenceFieldName": {
          "type": "string",
          "description": "Name of {@link ReferenceField} of counted document, only document that reference document of this field will be counted."
        }
      },
      "required": [
        "type",
        "referenceCollectionName",
        "referenceFieldName"
      ]
    },
    "SchemaIntegerField": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "integer"
        },
        "min": {
          "$ref": "#/definitions/integer",
          "description": "Minimum value of this integer, inclusive."
        },
        "max": {
          "$ref": "#/definitions/integer",
          "description": "Maximum value of this integer, inclusive."
        }
      },
      "required": [
        "type"
      ]
    },
    "integer": {
      "type": "number"
    },
    "SchemaReferenceField": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "reference"
        },
        "referenceCollectionName": {
          "type": "string",
          "description": "Name of collection of referenced document."
        },
        "referenceSyncedFields": {
          "$ref": "#/definitions/ArrayOr%3Cstring%3E",
          "description": "Name of fields to be synced."
        }
      },
      "required": [
        "type",
        "referenceCollectionName",
        "referenceSyncedFields"
      ]
    },
    "ArrayOr<string>": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "SchemaServerTimestampField": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "serverTimestamp"
        }
      },
      "required": [
        "type"
      ]
    },
    "SchemaStringField": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "string"
        },
        "minLength": {
          "$ref": "#/definitions/integer",
          "description": "Minimum length of this string, inclusive.",
          "minimum": 1
        },
        "maxLength": {
          "$ref": "#/definitions/integer",
          "description": "Maximum length of this string, inclusive.",
          "minimum": 1
        },
        "properties": {
          "$ref": "#/definitions/ArrayOr%3Calias-1912347535-548-590-1912347535-0-1440%3E",
          "description": "`isUnique`: value of this string field will be unique across collections."
        }
      },
      "required": [
        "type"
      ]
    },
    "ArrayOr<alias-1912347535-548-590-1912347535-0-1440>": {
      "anyOf": [
        {
          "type": "string",
          "const": "isUnique"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "const": "isUnique"
          }
        }
      ]
    },
    "SchemaSumField": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "sum"
        },
        "referenceCollectionName": {
          "type": "string",
          "description": "Name of collection of document of summed field, the collection must have reference to collection of this document."
        },
        "referenceFieldName": {
          "type": "string",
          "description": "Name of {@link ReferenceField} of document of summed field, only field of document that reference this document will be summed."
        },
        "sumFieldName": {
          "type": "string",
          "description": "Name of field to be summed. The field must be {@link IntegerField}."
        }
      },
      "required": [
        "type",
        "referenceCollectionName",
        "referenceFieldName",
        "sumFieldName"
      ],
      "description": "Sum value of certain field of document which refers to this document"
    }
  }
}